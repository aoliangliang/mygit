<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newtouch.blockchain.dao.NonceDao">
  <resultMap id="BaseResultMap" type="com.newtouch.blockchain.entity.Nonce">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="NONCE" jdbcType="BIGINT" property="nonce" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="HASH" jdbcType="VARCHAR" property="hash" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="FROM_ADDRESS" jdbcType="VARCHAR" property="fromAddress" />
    <result column="TO_ADDRESS" jdbcType="VARCHAR" property="toAddress" />
    <result column="AMOUNT" jdbcType="BIGINT" property="amount" />
    <result column="SOURCE" jdbcType="VARCHAR" property="source" />
    <result column="OWNER" jdbcType="VARCHAR" property="owner" />
    <result column="ISSUER" jdbcType="VARCHAR" property="issuer" />
    <result column="QUE_QUAN_HASH" jdbcType="VARCHAR" property="queQuanHash" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="REQUEST_TIME" jdbcType="TIMESTAMP" property="requestTime" />
    <result column="FIRST_INSERT" jdbcType="TIMESTAMP" property="firstInsert" />
    <result column="LAST_MODIFIED" jdbcType="TIMESTAMP" property="lastModified" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
    <result column="DELETED" jdbcType="BIT" property="deleted" />
    <result column="DEL_REASON" jdbcType="VARCHAR" property="delReason" />
  </resultMap>
  <sql id="baseSql">
  	ID, NONCE, TYPE, HASH, STATUS, FROM_ADDRESS, TO_ADDRESS, AMOUNT, SOURCE, OWNER, ISSUER, QUE_QUAN_HASH, REMARK, 
  	REQUEST_TIME, FIRST_INSERT, LAST_MODIFIED, CREATE_USER, UPDATE_USER, DELETED, DEL_REASON
  </sql>
  <delete id="deleteById" parameterType="java.lang.String">
    delete from TBL_NONCE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.newtouch.blockchain.entity.Nonce">
    insert into TBL_NONCE (ID, NONCE, TYPE, HASH, STATUS, FROM_ADDRESS, TO_ADDRESS, AMOUNT, SOURCE, OWNER, ISSUER, QUE_QUAN_HASH, REMARK, 
  	REQUEST_TIME, FIRST_INSERT, LAST_MODIFIED, CREATE_USER, UPDATE_USER, DELETED, DEL_REASON) 
    values (#{id,jdbcType=VARCHAR}, #{nonce,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{hash,jdbcType=VARCHAR}, 
    	#{status,jdbcType=VARCHAR}, #{fromAddress,jdbcType=VARCHAR}, #{toAddress,jdbcType=VARCHAR}, #{amount,jdbcType=BIGINT}, 
    	#{source,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}, #{issuer,jdbcType=VARCHAR}, #{queQuanHash,jdbcType=VARCHAR}, 
    	#{remark,jdbcType=VARCHAR}, #{requestTime,jdbcType=TIMESTAMP}, 
		#{firstInsert,jdbcType=TIMESTAMP}, #{lastModified,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
		#{updateUser,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT}, #{delReason,jdbcType=VARCHAR})
  </insert>
  <update id="updateStatusById" parameterType="com.newtouch.blockchain.entity.Nonce">
    update TBL_NONCE
    set STATUS = #{status,jdbcType=VARCHAR},
      LAST_MODIFIED = #{lastModified,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="baseSql"/>
    from TBL_NONCE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="baseSql"/>
    from TBL_NONCE order by REQUEST_TIME desc
  </select>
  <select id ="selectAllQueQuan" resultMap="BaseResultMap">
    select <include refid="baseSql"/>
    from TBL_NONCE 
    where DELETED='0' and STATUS <![CDATA[<>]]> '4' and (TYPE='3' or TYPE='4') 
    order by REQUEST_TIME desc
  </select>
  <select id ="selectAllByOwner" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="baseSql"/> 
    from TBL_NONCE 
    where DELETED='0' and STATUS <![CDATA[<>]]> '4' and (TYPE='3' or TYPE='4') 
    and OWNER = #{owner,jdbcType=VARCHAR} 
    order by REQUEST_TIME desc
  </select>
  <select id ="selectAllByIssuer" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="baseSql"/>
    from TBL_NONCE 
    where DELETED='0' and STATUS <![CDATA[<>]]> '4' and (TYPE='3' or TYPE='4') 
    and ISSUER = #{issuer,jdbcType=VARCHAR} 
    order by REQUEST_TIME desc
  </select>
  <select id ="findByQueQuanHash" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="baseSql"/>
    from TBL_NONCE 
    where DELETED='0' and STATUS <![CDATA[<>]]> '4' and (TYPE='3' or TYPE='4') 
    and QUE_QUAN_HASH = #{queQuanHash,jdbcType=VARCHAR} 
    order by REQUEST_TIME desc limit 1
  </select>
  <select id ="findTransferByAddress" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="baseSql"/> 
    from TBL_NONCE 
    where DELETED='0' and STATUS <![CDATA[<>]]> '4' and (TYPE='1' or TYPE='2') 
    and (FROM_ADDRESS = #{address,jdbcType=VARCHAR} or TO_ADDRESS = #{address,jdbcType=VARCHAR}) 
    order by REQUEST_TIME asc
  </select>
  <select id ="findTransferByAddressForBalance" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="baseSql"/> 
    from TBL_NONCE 
    where DELETED='0' and STATUS <![CDATA[<>]]> '4' and (TYPE='1' or TYPE='2') 
    and (FROM_ADDRESS = #{address,jdbcType=VARCHAR} or TO_ADDRESS = #{address,jdbcType=VARCHAR}) 
    order by REQUEST_TIME asc
  </select>
  <select id="findByQueQuan" resultMap="BaseResultMap" parameterType="com.newtouch.blockchain.entity.Nonce">
  	select n.* from TBL_NONCE n
  	<where>
  		(n.TYPE = '3' or n.TYPE='4') 
  		<if test="issuer != null and issuer != ''">
  			and n.ISSUER = #{issuer,jdbcType=VARCHAR}
  		</if>
  		<if test="owner != null and owner != ''">
  			and n.OWNER = #{owner,jdbcType=VARCHAR}
  		</if>
  		<if test="queQuanHash != null and queQuanHash != ''">
  			and n.QUE_QUAN_HASH = #{queQuanHash,jdbcType=VARCHAR}
  		</if>
  	</where>
  	order by n.REQUEST_TIME desc
  </select>
    <select id ="findBillByParam" resultMap="BaseResultMap" parameterType="com.newtouch.blockchain.vo.QueryBillVO">
    select a.*
    from TBL_NONCE 
    a LEFT JOIN TBL_ADDRESS_RECORD b ON a.FROM_ADDRESS=b.ADDRESS OR a.TO_ADDRESS=b.ADDRESS 
    <where>
     	<if test="userId != null and userId != ''">
     	 b.USER_ID=#{userId,jdbcType=VARCHAR}
     	</if>
     	<if test="startTime != null">
     	and a.REQUEST_TIME &gt;= #{startTime,jdbcType=TIMESTAMP}
     	</if>
     	<if test="endTime != null">
     	and a.REQUEST_TIME &lt; #{endTime,jdbcType=TIMESTAMP}
     	</if>
     	and a.STATUS <![CDATA[<>]]> '4' and (a.TYPE='1' or a.TYPE='2') 
    </where>
    order by a.REQUEST_TIME desc
  </select>
    <select id ="findBillByEntity" resultMap="BaseResultMap" parameterType="com.newtouch.blockchain.vo.QueryBillVO">
    select <include refid="baseSql"/>
    from TBL_NONCE 
    <where>
    	<if test="address != null and address != ''">
     	FROM_ADDRESS = #{address,jdbcType=VARCHAR} OR TO_ADDRESS = #{address,jdbcType=VARCHAR}
     	</if>
     	<if test="startTime != null">
     	and REQUEST_TIME &gt;= #{startTime,jdbcType=TIMESTAMP}
     	</if>
     	<if test="endTime != null">
     	and REQUEST_TIME &lt; #{endTime,jdbcType=TIMESTAMP}
     	</if>
     	and STATUS <![CDATA[<>]]> '4' and (TYPE='1' or TYPE='2') 
    </where>
    order by REQUEST_TIME desc
  </select>
  <select id ="getMaxNonce" resultType="java.math.BigInteger">
    select MAX(NONCE) 
    from TBL_NONCE 
    where DELETED='0'
  </select>
  <select id ="selectNeedSend" resultMap="BaseResultMap">
    select <include refid="baseSql"/> 
    from TBL_NONCE 
    where DELETED='0' and STATUS='0' and (TYPE='1' or TYPE='3' or TYPE='4') 
    order by REQUEST_TIME asc limit 1000
  </select>
  <select id ="selectSent" resultMap="BaseResultMap">
    select <include refid="baseSql"/> 
    from TBL_NONCE 
    where DELETED='0' and STATUS='1' 
    order by REQUEST_TIME asc limit 1000
  </select>
  <select id ="findQueQuanHashOnChain" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="baseSql"/>
    from TBL_NONCE 
    where DELETED='0' and (STATUS='1' or STATUS='2' or STATUS='3') and (TYPE='3' or TYPE='4') 
    and QUE_QUAN_HASH = #{queQuanHash,jdbcType=VARCHAR} 
    order by REQUEST_TIME desc limit 1
  </select>
  <update id="updateInitToSentById" parameterType="com.newtouch.blockchain.entity.Nonce">
    update TBL_NONCE
    set STATUS = '1', 
      NONCE = #{nonce,jdbcType=BIGINT}, 
      HASH = #{hash,jdbcType=VARCHAR}, 
      LAST_MODIFIED = #{lastModified,jdbcType=TIMESTAMP} 
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateToSuccessById" parameterType="com.newtouch.blockchain.entity.Nonce">
    update TBL_NONCE
    set STATUS = '2',
      LAST_MODIFIED = #{lastModified,jdbcType=TIMESTAMP} 
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id ="findNonceByEntity" resultMap="BaseResultMap" parameterType="com.newtouch.blockchain.vo.QueryBillVO">
    select <include refid="baseSql"/>
    from TBL_NONCE 
    <where>
    	<if test="address != null and address != ''">
     	FROM_ADDRESS = #{address,jdbcType=VARCHAR} OR TO_ADDRESS = #{address,jdbcType=VARCHAR}
     	</if>
     	<if test="startTime != null">
     	and REQUEST_TIME &gt;= #{startTime,jdbcType=TIMESTAMP}
     	</if>
     	<if test="endTime != null">
     	and REQUEST_TIME &lt; #{endTime,jdbcType=TIMESTAMP}
     	</if>
    </where>
    order by REQUEST_TIME desc
  </select>
</mapper>